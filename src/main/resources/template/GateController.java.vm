package com.aek.mspp.web.controller;

import ${package}.${project}.api.bo.${className}BO;
import ${package}.${project}.api.bo.${className}PageQueryBO;
import ${package}.${project}.api.service.${className}ApiService;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RestController;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import ${package}.core.web.controller.BaseController;
import ${package}.core.web.vo.ResultModel;

/** 
 * @Description ${controller}
 * @author ansen.zhu
 * @date ${datetime}
 */
@Api(tags = {"${controller}"})
@RestController
@RequestMapping(value = "/aek-mspp")
public class ${className}Controller extends BaseController{

	@Autowired
	private  ${className}ApiService ${classname}ApiService;
	
    @RequestMapping(value = "${model}get", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取${domain}", httpMethod = "POST")
	public ResultModel get(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName}){
		return ResultModel.ok(this.${classname}ApiService.get(${pk.lowercaseAttrName}));
	}

    @RequestMapping(value = "${model}list", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取${domain}列表", httpMethod = "POST")
	public ResultModel list(@RequestBody final Map<String, Object> map){
		return ResultModel.ok(this.${classname}ApiService.list(map));
	}
	
	@RequestMapping(value = "${model}page", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "分页获取${domain}列表", httpMethod = "POST")
    public ResultModel page(@RequestBody final ${className}PageQueryBO ${classname}PageQueryBO) {
        ${classname}PageQueryBO.setSupplierOrgId(this.getCurrentOrgId());
        return ResultModel.ok(this.${classname}ApiService.page(${classname}PageQueryBO));
    }

    @RequestMapping(value = "${model}count", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "计数${domain}", httpMethod = "POST")
	public ResultModel count(@RequestBody final Map<String, Object> map){
		return ResultModel.ok(this.${classname}ApiService.count(map));
	}

    @RequestMapping(value = "${model}save", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "新增${domain}", httpMethod = "POST")
	public ResultModel save(@RequestBody final ${className}BO ${classname}BO){
		return ResultModel.ok(this.${classname}ApiService.save(${classname}BO));
	}
	
    @RequestMapping(value = "${model}update", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "更新${domain}", httpMethod = "POST")
	public ResultModel update(@RequestBody final ${className}BO ${classname}BO){
		return ResultModel.ok(this.${classname}ApiService.update(${classname}BO));
	}
	
    @RequestMapping(value = "${model}delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "删除${domain}", httpMethod = "POST")
	public ResultModel remove(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName}){
		return ResultModel.ok(this.${classname}ApiService.remove(${pk.lowercaseAttrName}));
	}
	
    @RequestMapping(value = "${model}batch/delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "批量删除${domain}", httpMethod = "POST")
	public ResultModel batchRemove(@RequestBody final ${pk.javaDataType}[] ${pk.lowercaseAttrName}s){
		return ResultModel.ok(this.${classname}ApiService.batchRemove(${pk.lowercaseAttrName}s));
	}
}
