package ${package}.${project}.api.service;

import ${package}.${project}.api.vo.${className}VO;
import ${package}.${project}.api.bo.${className}BO;
import ${package}.${project}.api.vo.${className}PageVO;
import ${package}.${project}.api.bo.${className}PageQueryBO;
import java.util.List;
import java.util.Map;
import org.springframework.cloud.netflix.feign.FeignClient;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

/** 
 * @Description ${controller}
 * @author ansen.zhu
 * @date ${datetime}
 */
@FeignClient(name = "${project}-service")
public interface ${className}ApiService {

    @RequestMapping(value = "${model}get", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	${className}VO get(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName});

    @RequestMapping(value = "${model}list", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	List<${className}VO> list(@RequestBody final Map<String, Object> map);
	
    @RequestMapping(value = "${model}page", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    public ${className}PageVO page(@RequestBody final ${className}PageQueryBO ${classname}PageQueryBO);

    @RequestMapping(value = "${model}count", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	int count(@RequestBody final Map<String, Object> map);

    @RequestMapping(value = "${model}save", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	int save(@RequestBody final ${className}BO ${classname}BO);
	
    @RequestMapping(value = "${model}update", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	int update(@RequestBody final ${className}BO ${classname}BO);
	
    @RequestMapping(value = "${model}delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	int remove(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName});
	
    @RequestMapping(value = "${model}batch/delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
	int batchRemove(@RequestBody final ${pk.javaDataType}[] ${pk.lowercaseAttrName}s);
}
