package ${package}.${project}.api.controller;

import ${package}.${project}.api.vo.${className}VO;
import ${package}.${project}.api.bo.${className}BO;
import ${package}.${project}.api.vo.${className}PageVO;
import ${package}.${project}.api.bo.${className}PageQueryBO;
import ${package}.${project}.service.biz.${className}BizService;
import ${package}.${project}.persistence.bean.${className};
import ${package}.${project}.api.service.${className}ApiService;
import java.util.List;
import java.util.Map;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.baomidou.mybatisplus.plugins.Page;

/** 
 * @Description ${controller}
 * @author ansen.zhu
 * @date ${datetime}
 */
@Api(tags = {"${controller}"})
@RestController
public class ${className}ApiController implements ${className}ApiService{

	@Autowired
	private ${className}BizService ${classname}BizService;
	
	@Override
    @RequestMapping(value = "${model}get", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取${domain}", httpMethod = "POST")
	public ${className}VO get(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName}){
	
		return this.${classname}BizService.get(${pk.lowercaseAttrName});
	}

	@Override
    @RequestMapping(value = "${model}list", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "获取${domain}列表", httpMethod = "POST")
	public List<${className}VO> list(@RequestBody final Map<String, Object> map){
		return this.${classname}BizService.list(map);
	}
	
	@Override
	@RequestMapping(value = "${model}page", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "分页获取${domain}列表", httpMethod = "POST")
    public ${className}PageVO page(@RequestBody final ${className}PageQueryBO ${classname}PageQueryBO) {
        final Page<${className}> page = new Page<>(${classname}PageQueryBO.getCurrent(),${classname}PageQueryBO.getPageSize());
        return this.${classname}BizService.page(page, ${classname}PageQueryBO);
    }

	@Override
    @RequestMapping(value = "${model}count", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "计数${domain}", httpMethod = "POST")
	public int count(@RequestBody final Map<String, Object> map){
		return this.${classname}BizService.count(map);
	}

	@Override
    @RequestMapping(value = "${model}save", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "新增${domain}", httpMethod = "POST")
	public int save(@RequestBody final ${className}BO ${classname}BO){
		return this.${classname}BizService.save(${classname}BO);
	}
	
	@Override
    @RequestMapping(value = "${model}update", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "更新${domain}", httpMethod = "POST")
	public int update(@RequestBody final ${className}BO ${classname}BO){
		return this.${classname}BizService.update(${classname}BO);
	}
	
	@Override
    @RequestMapping(value = "${model}delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "删除${domain}", httpMethod = "POST")
	public int remove(@RequestBody final ${pk.javaDataType} ${pk.lowercaseAttrName}){
		return this.${classname}BizService.remove(${pk.lowercaseAttrName});
	}
	
	@Override
    @RequestMapping(value = "${model}batch/delete", method = RequestMethod.POST,
                    consumes = MediaType.APPLICATION_JSON_VALUE)
    @ApiOperation(value = "批量删除${domain}", httpMethod = "POST")
	public int batchRemove(@RequestBody final ${pk.javaDataType}[] ${pk.lowercaseAttrName}s){
		return this.${classname}BizService.batchRemove(${pk.lowercaseAttrName}s);
	}
}
